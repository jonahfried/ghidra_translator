In the provided function `_string_is_not_equal`, the purpose is to check if two strings are not equal by using a string comparison function. Here's the breakdown of the placeholder names and the suggested descriptive names:

1. `param_1` and `param_2`: These parameters represent the strings that are being compared. Given that they are inputs to a string comparison operation, a suitable name for each would be `string1` and `string2` respectively. The descriptive names indicate that they are strings being compared.

2. `iVar1`: This variable stores the result of the comparison function `_string_compare`. A descriptive name would be `compare_result` because it holds the outcome (typically an integer) of the string comparison, where a result of 0 would indicate that the strings are equal, and any non-zero value indicates they are different.

3. The function itself `_string_is_not_equal` returns a boolean indicating whether the two strings are not equal. The return is based on whether `compare_result` is not zero.

The mapping and reasoning can be summarized as:
```json
{
  "param_1": "string1",
  "param_2": "string2",
  "iVar1": "compare_result"
}
```

These names are chosen for clarity and to reflect the usage within the function, making the code easier to understand at a glance.